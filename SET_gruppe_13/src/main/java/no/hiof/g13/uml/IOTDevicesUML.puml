@startuml
'https://plantuml.com/class-diagram

abstract class IOTDevice{
    #name: String
    #deviceID: String
    #producer: String
    #weight: float
    #wifi: boolean
    #modell: String
    #powerUsage: int
    +configureDevice(): void
    +updateSettings(): void
}
IOTDevice <|-- IOTEnergyManagment
IOTDevice <|-- IOTEntertainment
IOTDevice <|-- IOTSensors
IOTDevice <|-- IOTWearables
IOTDevice <|-- IOTHomeDevice
abstract class IOTEnergyManagment{
    #frequencies: int
    #voltage: int
    #maxLoad: HashMap<String, Integer>
}
abstract class IOTEntertainment
abstract class IOTSensors{
    #accurecy: float
    #minimumOperationingTemp: int
    #maximumOperationingTemp: int
    #size: HashMap<String, Integer>
}
abstract class IOTWearables{
    #display: boolean
    #useStyle: String
    #funksjoner: ArrayList<String>
    #gps: boolean
    #batteryCapacity: int
    #size: HashMap<String, Integer>
}
abstract class IOTHomeDevice{
    #size: HashMap<String, Integer>
    #batteryLevel: int
    #schedule: ArrayList<OffsetDateTime>
    +getSize(dummy: String): int[]
    +updateBattery(batteryLevel: int): void
    +updateDeviceBattery(batteryLevel: int): void
}
IOTHomeDevice <|-- IOTDoorLock
IOTHomeDevice <|-- IOTLawnMower
IOTHomeDevice <|-- IOTVacuumCleaner
class IOTDoorLock{
    #lockedStatus: boolean
    #userAuthentication: int
    +configureDevice(): void
    +updateSettings(): void
}
class IOTLawnMower{
    +configureDevice(): void
    +updateSettings(): void
}
class IOTVacuumCleaner{
    +configureDevice(): void
    +updateSettings(): void
}
class MyProducts{
    -myProducts: ArrayList<IOTDevice>
    +addproducts(devices: IOTDevice[])
    +removeproducts(device: IOTDevice)
}
MyProducts o-- IOTDoorLock

@enduml